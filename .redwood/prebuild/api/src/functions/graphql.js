import { authDecoder } from '@redwoodjs/auth-supabase-api';
import { createGraphQLHandler } from '@redwoodjs/graphql-server';
let directives = {};
import * as directives_requireAuth_requireAuth from "../directives/requireAuth/requireAuth";
directives.requireAuth_requireAuth = directives_requireAuth_requireAuth;
import * as directives_skipAuth_skipAuth from "../directives/skipAuth/skipAuth";
directives.skipAuth_skipAuth = directives_skipAuth_skipAuth;
let sdls = {};
import * as sdls_communityOwners_sdl from "../graphql/communityOwners.sdl";
sdls.communityOwners_sdl = sdls_communityOwners_sdl;
import * as sdls_diaries_sdl from "../graphql/diaries.sdl";
sdls.diaries_sdl = sdls_diaries_sdl;
import * as sdls_gyms_sdl from "../graphql/gyms.sdl";
sdls.gyms_sdl = sdls_gyms_sdl;
import * as sdls_listings_sdl from "../graphql/listings.sdl";
sdls.listings_sdl = sdls_listings_sdl;
import * as sdls_users_sdl from "../graphql/users.sdl";
sdls.users_sdl = sdls_users_sdl;
let services = {};
import * as services_communityOwners_communityOwners from "../services/communityOwners/communityOwners";
services.communityOwners_communityOwners = services_communityOwners_communityOwners;
import * as services_diaries_diaries from "../services/diaries/diaries";
services.diaries_diaries = services_diaries_diaries;
import * as services_gyms_gyms from "../services/gyms/gyms";
services.gyms_gyms = services_gyms_gyms;
import * as services_listings_listings from "../services/listings/listings";
services.listings_listings = services_listings_listings;
import * as services_users_users from "../services/users/users";
services.users_users = services_users_users;
import { getCurrentUser } from "../lib/auth";
import { db } from "../lib/db";
import { logger } from "../lib/logger";
export const handler = createGraphQLHandler({
  authDecoder,
  getCurrentUser,
  loggerConfig: {
    logger,
    options: {}
  },
  directives,
  sdls,
  services,
  onException: () => {
    // Disconnect from your database with an unhandled exception.
    db.$disconnect();
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhdXRoRGVjb2RlciIsImNyZWF0ZUdyYXBoUUxIYW5kbGVyIiwiZGlyZWN0aXZlcyIsImRpcmVjdGl2ZXNfcmVxdWlyZUF1dGhfcmVxdWlyZUF1dGgiLCJyZXF1aXJlQXV0aF9yZXF1aXJlQXV0aCIsImRpcmVjdGl2ZXNfc2tpcEF1dGhfc2tpcEF1dGgiLCJza2lwQXV0aF9za2lwQXV0aCIsInNkbHMiLCJzZGxzX2NvbW11bml0eU93bmVyc19zZGwiLCJjb21tdW5pdHlPd25lcnNfc2RsIiwic2Rsc19kaWFyaWVzX3NkbCIsImRpYXJpZXNfc2RsIiwic2Rsc19neW1zX3NkbCIsImd5bXNfc2RsIiwic2Rsc19saXN0aW5nc19zZGwiLCJsaXN0aW5nc19zZGwiLCJzZGxzX3VzZXJzX3NkbCIsInVzZXJzX3NkbCIsInNlcnZpY2VzIiwic2VydmljZXNfY29tbXVuaXR5T3duZXJzX2NvbW11bml0eU93bmVycyIsImNvbW11bml0eU93bmVyc19jb21tdW5pdHlPd25lcnMiLCJzZXJ2aWNlc19kaWFyaWVzX2RpYXJpZXMiLCJkaWFyaWVzX2RpYXJpZXMiLCJzZXJ2aWNlc19neW1zX2d5bXMiLCJneW1zX2d5bXMiLCJzZXJ2aWNlc19saXN0aW5nc19saXN0aW5ncyIsImxpc3RpbmdzX2xpc3RpbmdzIiwic2VydmljZXNfdXNlcnNfdXNlcnMiLCJ1c2Vyc191c2VycyIsImdldEN1cnJlbnRVc2VyIiwiZGIiLCJsb2dnZXIiLCJoYW5kbGVyIiwibG9nZ2VyQ29uZmlnIiwib3B0aW9ucyIsIm9uRXhjZXB0aW9uIiwiJGRpc2Nvbm5lY3QiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9hcGkvc3JjL2Z1bmN0aW9ucy9ncmFwaHFsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGF1dGhEZWNvZGVyIH0gZnJvbSAnQHJlZHdvb2Rqcy9hdXRoLXN1cGFiYXNlLWFwaSdcbmltcG9ydCB7IGNyZWF0ZUdyYXBoUUxIYW5kbGVyIH0gZnJvbSAnQHJlZHdvb2Rqcy9ncmFwaHFsLXNlcnZlcidcblxuaW1wb3J0IGRpcmVjdGl2ZXMgZnJvbSAnc3JjL2RpcmVjdGl2ZXMvKiovKi57anMsdHN9J1xuaW1wb3J0IHNkbHMgZnJvbSAnc3JjL2dyYXBocWwvKiovKi5zZGwue2pzLHRzfSdcbmltcG9ydCBzZXJ2aWNlcyBmcm9tICdzcmMvc2VydmljZXMvKiovKi57anMsdHN9J1xuXG5pbXBvcnQgeyBnZXRDdXJyZW50VXNlciB9IGZyb20gJ3NyYy9saWIvYXV0aCdcbmltcG9ydCB7IGRiIH0gZnJvbSAnc3JjL2xpYi9kYidcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ3NyYy9saWIvbG9nZ2VyJ1xuXG5leHBvcnQgY29uc3QgaGFuZGxlciA9IGNyZWF0ZUdyYXBoUUxIYW5kbGVyKHtcbiAgYXV0aERlY29kZXIsXG4gIGdldEN1cnJlbnRVc2VyLFxuICBsb2dnZXJDb25maWc6IHsgbG9nZ2VyLCBvcHRpb25zOiB7fSB9LFxuICBkaXJlY3RpdmVzLFxuICBzZGxzLFxuICBzZXJ2aWNlcyxcbiAgb25FeGNlcHRpb246ICgpID0+IHtcbiAgICAvLyBEaXNjb25uZWN0IGZyb20geW91ciBkYXRhYmFzZSB3aXRoIGFuIHVuaGFuZGxlZCBleGNlcHRpb24uXG4gICAgZGIuJGRpc2Nvbm5lY3QoKVxuICB9LFxufSlcbiJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsV0FBVyxRQUFRLDhCQUE4QjtBQUMxRCxTQUFTQyxvQkFBb0IsUUFBUSwyQkFBMkI7QUFBQSxJQUFBQyxVQUFBO0FBQUEsWUFBQUMsa0NBQUE7QUFBQUQsVUFBQSxDQUFBRSx1QkFBQSxHQUFBRCxrQ0FBQTtBQUFBLFlBQUFFLDRCQUFBO0FBQUFILFVBQUEsQ0FBQUksaUJBQUEsR0FBQUQsNEJBQUE7QUFBQSxJQUFBRSxJQUFBO0FBQUEsWUFBQUMsd0JBQUE7QUFBQUQsSUFBQSxDQUFBRSxtQkFBQSxHQUFBRCx3QkFBQTtBQUFBLFlBQUFFLGdCQUFBO0FBQUFILElBQUEsQ0FBQUksV0FBQSxHQUFBRCxnQkFBQTtBQUFBLFlBQUFFLGFBQUE7QUFBQUwsSUFBQSxDQUFBTSxRQUFBLEdBQUFELGFBQUE7QUFBQSxZQUFBRSxpQkFBQTtBQUFBUCxJQUFBLENBQUFRLFlBQUEsR0FBQUQsaUJBQUE7QUFBQSxZQUFBRSxjQUFBO0FBQUFULElBQUEsQ0FBQVUsU0FBQSxHQUFBRCxjQUFBO0FBQUEsSUFBQUUsUUFBQTtBQUFBLFlBQUFDLHdDQUFBO0FBQUFELFFBQUEsQ0FBQUUsK0JBQUEsR0FBQUQsd0NBQUE7QUFBQSxZQUFBRSx3QkFBQTtBQUFBSCxRQUFBLENBQUFJLGVBQUEsR0FBQUQsd0JBQUE7QUFBQSxZQUFBRSxrQkFBQTtBQUFBTCxRQUFBLENBQUFNLFNBQUEsR0FBQUQsa0JBQUE7QUFBQSxZQUFBRSwwQkFBQTtBQUFBUCxRQUFBLENBQUFRLGlCQUFBLEdBQUFELDBCQUFBO0FBQUEsWUFBQUUsb0JBQUE7QUFBQVQsUUFBQSxDQUFBVSxXQUFBLEdBQUFELG9CQUFBO0FBTWhFLFNBQVNFLGNBQWM7QUFDdkIsU0FBU0MsRUFBRTtBQUNYLFNBQVNDLE1BQU07QUFFZixPQUFPLE1BQU1DLE9BQU8sR0FBRy9CLG9CQUFvQixDQUFDO0VBQzFDRCxXQUFXO0VBQ1g2QixjQUFjO0VBQ2RJLFlBQVksRUFBRTtJQUFFRixNQUFNO0lBQUVHLE9BQU8sRUFBRSxDQUFDO0VBQUUsQ0FBQztFQUNyQ2hDLFVBQVU7RUFDVkssSUFBSTtFQUNKVyxRQUFRO0VBQ1JpQixXQUFXLEVBQUVBLENBQUEsS0FBTTtJQUNqQjtJQUNBTCxFQUFFLENBQUNNLFdBQVcsRUFBRTtFQUNsQjtBQUNGLENBQUMsQ0FBQyJ9